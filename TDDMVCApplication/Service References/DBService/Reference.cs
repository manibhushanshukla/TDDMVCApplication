//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TDDMVCApplication.DBService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Book", Namespace="http://schemas.datacontract.org/2004/07/DBClassLibrary")]
    [System.SerializableAttribute()]
    public partial class Book : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BookNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ISBNField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorName {
            get {
                return this.AuthorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorNameField, value) != true)) {
                    this.AuthorNameField = value;
                    this.RaisePropertyChanged("AuthorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BookName {
            get {
                return this.BookNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BookNameField, value) != true)) {
                    this.BookNameField = value;
                    this.RaisePropertyChanged("BookName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISBN {
            get {
                return this.ISBNField;
            }
            set {
                if ((object.ReferenceEquals(this.ISBNField, value) != true)) {
                    this.ISBNField = value;
                    this.RaisePropertyChanged("ISBN");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DBService.IServiceLibrary")]
    public interface IServiceLibrary {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/GetAllBooks", ReplyAction="http://tempuri.org/IServiceLibrary/GetAllBooksResponse")]
        System.Collections.Generic.List<TDDMVCApplication.DBService.Book> GetAllBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/GetAllBooks", ReplyAction="http://tempuri.org/IServiceLibrary/GetAllBooksResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<TDDMVCApplication.DBService.Book>> GetAllBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/Details", ReplyAction="http://tempuri.org/IServiceLibrary/DetailsResponse")]
        TDDMVCApplication.DBService.Book Details(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/Details", ReplyAction="http://tempuri.org/IServiceLibrary/DetailsResponse")]
        System.Threading.Tasks.Task<TDDMVCApplication.DBService.Book> DetailsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/AddBook", ReplyAction="http://tempuri.org/IServiceLibrary/AddBookResponse")]
        void AddBook(TDDMVCApplication.DBService.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/AddBook", ReplyAction="http://tempuri.org/IServiceLibrary/AddBookResponse")]
        System.Threading.Tasks.Task AddBookAsync(TDDMVCApplication.DBService.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/UpdateBook", ReplyAction="http://tempuri.org/IServiceLibrary/UpdateBookResponse")]
        void UpdateBook(TDDMVCApplication.DBService.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/UpdateBook", ReplyAction="http://tempuri.org/IServiceLibrary/UpdateBookResponse")]
        System.Threading.Tasks.Task UpdateBookAsync(TDDMVCApplication.DBService.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/DeleteBook", ReplyAction="http://tempuri.org/IServiceLibrary/DeleteBookResponse")]
        void DeleteBook(TDDMVCApplication.DBService.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLibrary/DeleteBook", ReplyAction="http://tempuri.org/IServiceLibrary/DeleteBookResponse")]
        System.Threading.Tasks.Task DeleteBookAsync(TDDMVCApplication.DBService.Book book);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceLibraryChannel : TDDMVCApplication.DBService.IServiceLibrary, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceLibraryClient : System.ServiceModel.ClientBase<TDDMVCApplication.DBService.IServiceLibrary>, TDDMVCApplication.DBService.IServiceLibrary {
        
        public ServiceLibraryClient() {
        }
        
        public ServiceLibraryClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceLibraryClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceLibraryClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceLibraryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<TDDMVCApplication.DBService.Book> GetAllBooks() {
            return base.Channel.GetAllBooks();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<TDDMVCApplication.DBService.Book>> GetAllBooksAsync() {
            return base.Channel.GetAllBooksAsync();
        }
        
        public TDDMVCApplication.DBService.Book Details(int id) {
            return base.Channel.Details(id);
        }
        
        public System.Threading.Tasks.Task<TDDMVCApplication.DBService.Book> DetailsAsync(int id) {
            return base.Channel.DetailsAsync(id);
        }
        
        public void AddBook(TDDMVCApplication.DBService.Book book) {
            base.Channel.AddBook(book);
        }
        
        public System.Threading.Tasks.Task AddBookAsync(TDDMVCApplication.DBService.Book book) {
            return base.Channel.AddBookAsync(book);
        }
        
        public void UpdateBook(TDDMVCApplication.DBService.Book book) {
            base.Channel.UpdateBook(book);
        }
        
        public System.Threading.Tasks.Task UpdateBookAsync(TDDMVCApplication.DBService.Book book) {
            return base.Channel.UpdateBookAsync(book);
        }
        
        public void DeleteBook(TDDMVCApplication.DBService.Book book) {
            base.Channel.DeleteBook(book);
        }
        
        public System.Threading.Tasks.Task DeleteBookAsync(TDDMVCApplication.DBService.Book book) {
            return base.Channel.DeleteBookAsync(book);
        }
    }
}
